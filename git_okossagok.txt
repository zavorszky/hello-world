GitHub okossagok
----------------



*** 2017.10.01 ***

Van egy helyi kísérlet sorozatom: JavaScript programocskákat és a DOM dolgait
próbálgatom. Ezt egy kicsit rendezem, és fel akarom tölteni a GitHub-ra. Első
lépés, a JS000.html-t átnevezni index.html-re. De ha csak úgy átnevezem, akkor
eltűnik a helyi könyvtáramból a JS000.html, a Repo-ban megmarad és mi lesz
akkor? Nincs valami átnevezés?

De van : https://git-scm.com/docs/git-mv

git mv [-v] [-f] [-n] [-k] <source> <destination>

A Git Gui-ban nem találtam ilyesmit.

A TortoiseGit felajánlja, a rename-t, de én egy önkínzó programozó vagyok és a
Git Gui-ból indítva parancssoros felületről próbálkozom. (Miért? Hogy a
legkevesebb eszközzel meg tudjam oldani a problémát. Pl. hogy ne szoruljak rá a
TortoiseGit-re. Ez meg miért jó? Nem tudom, valami olyasmi jut eszembe, hogy
egy algebrai bizonyítás szebb, ha algebrai eszközöket használ és nem mondjuk
analízisbelieket. Pedig lehet utóbbival elegánsabban megoldható lenne a dolog.
Huh már megint filozofálgatásba mentem át... :-)

(Git Gui menü)Repository / Git Bash 

<felhasználó>@<munkaállomás_név> MINGW64 /<meghajtó>/<könyvtárak...>/<munka_könyvtár> (<aktuális ág>)

$ mv -v JS000.html index.html
'JS000.html' -> 'index.html'

---1---
Hoppá!
Mi is történt?
Azt gondoltam, valamiféle Git Console-ba jutottam.

Nézzük:
$ help
GNU bash, version 4.4.12(1)-release (x86_64-pc-msys)
These shell commands are defined internally.  Type `help' to see this list.
Type `help name' to find out more about the function `name'.
Use `info bash' to find out more about the shell in general.
Use `man -k' or `info' to find out more about commands not in this list.

$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

Tehát sikerült a Git Gui-ból egy Linux/Unix szerű shell-t elindítanom és abban
egy szimpla átnevezést elvégezni, amit Windows-ban egy pillanat alatt
megtehettem volna. Nem baj, kovácsoljunk erényt a hibából! Megtudtam hogy
reagált a Git az eltűnő állományokra. Észreveszi. De mi volt a hiba? Lemaradt a
"git" parancs az "mv -v JS000.html index.html" elejéről. Na majd legközelebb...
---/1---

A Git Gui mutatja (Unstaged), hogy a JS000.html törölve, az index.html
megjelent, OK.

Stage Changed

Commit

Megnézem az aktuális ágat (Develop). Megjelent az index.html eltünt a
JS000.html, boldog vagyok.

(MinGW (Minimalist GNU for Windows), formerly mingw32, is a free and open source
software development environment for creating Microsoft Windows applications.)



*** 2017.09.29 ***

A GitHub logó egy cica!

* Megy az állomány módosítás a GitHubon :-)
Klikk az aktuális ágban lévő állományra / Jobbra a cerka.

* Vissza az áttekintő ablakba.
Klikk a Repo névre.

* Állomány törlés
Klikk az aktuális ágban lévő állományra / Jobbra a kuka.

Kipróbáltam, okos, ugyan azon névvel nem enged létrehozni egy új állományt. Még
jó...

A GitHub UTF-8 kódolású állományokat készít magától Windows(CR LF)
sorkezeléssel.

Mi történt?

Történések a GitHub-on
----------------------
1) Csatlakozás a GitHub-hoz. user:zavorszky

2) Egy Repo létrehozása: hello-world. Ekkor létrejön a master ág (branch) is.

3) Új ág létrehozása: readme-edits. Ezt a master ágban az ág választásnál
kellett megadni, és létrejött.

4) Új állományt készítettem git_okossagok.txt, javítgattam közben
szorgalmasan nyomogattam a commit gombot. Így összegyűlt egy csomó változás.

5) Most jött az "Open a Pull Request" (izé...). Ennek hatására az aktuális
(readme-edits) ágat összehasonlította a master ággal. (biztos lehetne más
ággal is, de túl gyorsan történtek a dolgok... :-) A változásokat megmutatta
és közölte, hogy automatikusan tud összefésülni (merge).

6) Megnyomtam a "Merge Pull Request". Itt valahol felajánlotta, hogy
törölhetem a readme-edits ágat, mert biztonságban vannak az adataim,
egyenlőre nem töröltem.

Na a GitHub-on a hello-world Repo-ban a master ágban elérkeztem egy
mérföldkőhöz, egy stabil állapothoz. Ezt kellett a helyi munkaállomásra
hoznom.

Clone or Replace

7) Kaptam is egy URL-t: https://github.com/zavorszky/hello-world.git amivel
valószínűleg sok jó dolgot tudok majd csinálni, de most meglepődtem.
Felajánlotta a GitHub Desktop installálását. Jó lássuk. Ezzel 3-ra nőtt a
Git-es szoftverek száma: a Git, a TortoiseGit és most a GitHub Desktop.
Letöltöttem (GitHubDesktopSetup.exe) elindítottam, feltelepült gond nélkül
(1.0.2).

Történések a helyi GitHub Desktop-on
------------------------------------

Automatikusan elindult és kérte a GitHub felhasználó nevemet és
jelszót. Miután megadtam kapcsolódott a GitHub-hoz és most le tudtam tölteni
(clone) a hello-world Repo-t.

Nekem még szokatlan, de a Repo nem az általam kiválasztott könyvtárBA jött
létre, hanem ALÁ. Logikus így kevesebbet kell bajlódni a könyvtárakkal és
véletlenül sem ömlik valami nem kívánatos helyre az anyag.

*** Vége ***
